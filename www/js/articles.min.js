
(function(global,factory){if(typeof define==="function"&&define.amd){define(['exports'],factory);}else if(typeof exports!=="undefined"){factory(exports);}else{var mod={exports:{}};factory(mod.exports);global.pager=mod.exports;}})(this,function(exports){'use strict';Object.defineProperty(exports,"__esModule",{value:true});class Pager{create(links,data,host){this._links=links;this._data=data;this._pager='';this._host=host;this.render();}
render(){this._pager=`
            <div class="pager">
                ${this.addView(this.createPage('prev'))}
                ${this.addView(this.createPage('start'))}
                ${this.addPages()}
                ${this.addView(this.createPage('finish'))}
                ${this.addView(this.createPage('next'))}
            </div>`;}
addPages(width=5){let data=this._data;let current=data['index'];let pages=data['pages'];let ret='';let tail=Math.floor(width/2);let start=current-tail;let end=current+tail;if(!(width%2)){console.log('Width is even');}else if(width>=pages){start=2;end=pages-1;}else if(start<2){end+=1-start;start=2;}else if(end>=pages){start-=end-pages;end=pages-1;}
ret+=start>2?this.addView(this.createPage('...')):'';for(let i=start;i<=end;i++)ret+=this.addView(this.createPage(i));ret+=end<pages-1?this.addView(this.createPage('...')):'';return ret;}
createPage(name){let title='';let page={};let links=this._links;let data=this._data;let host=this._host;if(name=='next'||name=='prev'){title=name=='next'?'>':'<';page['title']=title;page['page']=links[name];}else if(name=='start'||name=='finish'){title=name=='start'?'1':`${data['pages']}`;page['title']=title;page['page']=links[name];}else if(name=='...'){page['title']=`${name}`;page['page']=`${name}`;}else{page['title']=`${name}`;page['page']=host.replace('{{page}}',name);}
return page;}
addView(page){let ret='';let current=this._links['current'];if(page['page']==current||page['page']=='...'){ret=`<div class="page page-active">${page['title']}</div>`;}else{ret=`
                <div class="page" onclick="articles.addArticles('${page.page}')">
                    ${page['title']}
                </div>`;}
return ret;}
getPager(){if(this._data['pages']<=1)return'';return this._pager;}};exports.default=Pager;});(function(global,factory){if(typeof define==="function"&&define.amd){define(['exports'],factory);}else if(typeof exports!=="undefined"){factory(exports);}else{var mod={exports:{}};factory(mod.exports);global.articlesView=mod.exports;}})(this,function(exports){'use strict';Object.defineProperty(exports,"__esModule",{value:true});class ArticlesView{renderArticles(articles){let ret=articles.reduce((acc,current)=>{return acc+=this.renderArticle(current);},'');return ret;}
renderArticle(article,announce=true){let data=article.data;let links=article.links;let text=announce?data.announce:data.text;let click=announce?`onclick="articles.addArticle('${links.self}');"`:'';if(text!=='')text=`<div class="article-text">${text}</div>`;return`
            <div class="article" ${click}>
                <h3>${data.title}</h3>
                ${text}
            </div>
        `;}}
exports.default=ArticlesView;});(function(global,factory){if(typeof define==="function"&&define.amd){define(['articles-view','pager'],factory);}else if(typeof exports!=="undefined"){factory(require('articles-view'),require('pager'));}else{var mod={exports:{}};factory(global.articlesView,global.pager);global.articles=mod.exports;}})(this,function(_articlesView,_pager){'use strict';var _articlesView2=_interopRequireDefault(_articlesView);var _pager2=_interopRequireDefault(_pager);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}
const HOST='https://api.knife-museum.ru';class Articles{constructor(articleBlock,articlesBlock){this._articleBlock=articleBlock;this._articlesBlock=articlesBlock;this._view=new _articlesView2.default();this.addArticle();}
async addArticle(link='/pages/api/v1/home'){let view=this._view;let container=this._articleBlock;let promise=await fetch(HOST+link);let article=await promise.json();container.innerHTML=view.renderArticle(article,false);await this.addArticles(`${link}/`);}
async addArticles(link='/pages/api/v1/home/'){let view=this._view;let container=this._articlesBlock;let promise=await fetch(HOST+link);let data=await promise.json();let dataPager={count:data['count'],total:data['total'],index:data['index'],pages:data['pages']};container.innerHTML=view.renderArticles(data.items);container.innerHTML+=this.addPager(data.links,dataPager);}
addPager(links,data){let pager=new _pager2.default();let view=pager.create(links,data,HOST);return pager.getPager();}}
window.Articles=Articles;});
//# sourceMappingURL=maps/articles.min.js.map
